MAKE   = make
RM     = rm -f
RMDIR  = rm -rf
MKDIR  = mkdir -p
CP     = cp
CD     = cd
ECHO   = echo
CAT    = cat
TOUCH  = touch
NULL   = /dev/null

C_PROJ_FLAGS          =
ASM_PROJ_FLAGS        =
LINK_PROJ_FLAGS       =
LIB_PROJ_FLAGS        =

#
# Globally relevant flags. Options not appropriate for all builds may be 
# appropriate in the processor architecture specific macros (xxx_ARCH_FLAGS) or
# in the platform specific macros (xxx_PROJ_FLAGS)
#
C_STD_INCLUDE =
ASM_STD_INCLUDE = $(C_STD_INCLUDE)

C_STD_FLAGS         = -g -Wall -fshort-wchar -c -o $@ $(INC)
ASM_STD_FLAGS       = -P -xassembler-with-cpp $(C_STD_FLAGS)
LINK_STD_FLAGS      = --eh-frame-hdr
LIB_STD_FLAGS       =


#
# Build type specific flags.  Globally relevant flags belong in the standard 
# macros, xxx_STD_FLAGS defined above.  Platform specific macros belong in the
# PlatformTools.env file in macros named xxx_PROJ_FLAGS.
#
C_ARCH_FLAGS          += -D LINUX32 -D NDEBUG -D _CONSOLE
ASM_ARCH_FLAGS        +=
LINK_ARCH_FLAGS       += -EL -melf32ltsmip
LIB_ARCH_FLAGS        +=

#
# Always turn on debug for the build tools so that we can debug problems 
# quickly.
# NOTE: Ideally all the tools makefiles should be updated to use LINK_FLAGS_EXE
#       instead of L_FLAGS for linking. When this happens we can get rid of
#       the L_FLAGS definition here.
#

#if "$(EFI_SYMBOLIC_DEBUG)" == "YES"
C_STD_FLAGS       +=
LINK_ARCH_FLAGS   +=
L_FLAGS           +=
#endif

#
# Clear any project flags when building tools
#
C_PROJ_FLAGS          +=
ASM_PROJ_FLAGS        +=
LINK_PROJ_FLAGS       +=
LIB_PROJ_FLAGS        +=
EBC_C_PROJ_FLAGS      +=
EBC_LINK_PROJ_FLAGS   +=
EBC_LIB_PROJ_FLAGS    +=

#
# Build tools
#
CC                = gcc
CXX               = g++
LINK              = ld
ASM               = gcc
ASMLINK           = ld
#
# Use a different macro name for tools build to avoid conflict with environment
# variable LIB
#
LIB               = ar

INC = -I $(EFI_SOURCE)/include/efi110 \
      -I $(EFI_SOURCE)/include/efi110/Mips32 \
      -I $(EFI_SOURCE)/build/tools/src/syslib

C_FLAGS           = $(C_STD_FLAGS) $(C_ARCH_FLAGS) $(C_PROJ_FLAGS) $(C_STD_INCLUDE)
ASM_FLAGS         = $(ASM_STD_FLAGS) $(ASM_ARCH_FLAGS) $(ASM_PROJ_FLAGS) $(ASM_STD_INCLUDE)
LINK_FLAGS_DLL    = $(LINK_STD_FLAGS) $(LINK_ARCH_FLAGS) $(LINK_PROJ_FLAGS) -r -d -N
LINK_FLAGS_EXE    = $(LINK_STD_FLAGS) $(LINK_ARCH_FLAGS) $(LINK_PROJ_FLAGS) 
LIB_FLAGS         = $(LIB_STD_FLAGS) $(LIB_ARCH_FLAGS) $(LIB_PROJ_FLAGS)

